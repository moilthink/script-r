local Players = game:GetService("Players")
local player = Players.LocalPlayer
local camera = workspace.CurrentCamera

-- UI Root
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "PlayerHub"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Main Frame
local mainFrame = Instance.new("Frame", screenGui)
mainFrame.Size = UDim2.new(0.8, 0, 0.8, 0)
mainFrame.Position = UDim2.new(0.1, 0, 0.1, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
mainFrame.BorderSizePixel = 2

-- Player List Panel
local playerListFrame = Instance.new("ScrollingFrame", mainFrame)
playerListFrame.Size = UDim2.new(0.3, 0, 1, 0)
playerListFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
playerListFrame.ScrollBarThickness = 8
playerListFrame.BackgroundColor3 = Color3.fromRGB(180, 180, 180)
playerListFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
playerListFrame.AutomaticSize = Enum.AutomaticSize.None
playerListFrame.BorderSizePixel = 1

-- Layout
local listLayout = Instance.new("UIListLayout")
listLayout.SortOrder = Enum.SortOrder.LayoutOrder
listLayout.Padding = UDim.new(0, 4)
listLayout.Parent = playerListFrame

-- Detail Panel
local detailFrame = Instance.new("Frame", mainFrame)
detailFrame.Size = UDim2.new(0.7, 0, 1, 0)
detailFrame.Position = UDim2.new(0.3, 0, 0, 0)
detailFrame.BackgroundColor3 = Color3.fromRGB(245, 245, 245)

-- Thumbnail
local thumbnail = Instance.new("ImageLabel", detailFrame)
thumbnail.Size = UDim2.new(0, 100, 0, 100)
thumbnail.Position = UDim2.new(0, 20, 0, 20)
thumbnail.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
thumbnail.BorderSizePixel = 1
thumbnail.ScaleType = Enum.ScaleType.Fit
thumbnail.Visible = true  -- Hide the image label (no image)

-- Display Name
local displayNameLabel = Instance.new("TextLabel", detailFrame)
displayNameLabel.Position = UDim2.new(0, 140, 0, 20)
displayNameLabel.Size = UDim2.new(1, -160, 0, 30)
displayNameLabel.TextScaled = true
displayNameLabel.Font = Enum.Font.SourceSans
displayNameLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
displayNameLabel.Text = "DisplayName"

-- Username
local usernameLabel = Instance.new("TextLabel", detailFrame)
usernameLabel.Position = UDim2.new(0, 140, 0, 55)
usernameLabel.Size = UDim2.new(1, -160, 0, 30)
usernameLabel.TextScaled = true
usernameLabel.Font = Enum.Font.SourceSans
usernameLabel.TextColor3 = Color3.fromRGB(50, 50, 50)
usernameLabel.Text = "Username"

local statsLabel = Instance.new("TextLabel", detailFrame)
statsLabel.Position = UDim2.new(0, 20, 0, 140)
statsLabel.Size = UDim2.new(1, -40, 0, 25)
statsLabel.Text = "Stats:"
statsLabel.TextScaled = true
statsLabel.Font = Enum.Font.SourceSansBold
statsLabel.TextColor3 = Color3.fromRGB(0, 0, 0)

local StatListFrame = Instance.new("ScrollingFrame", detailFrame)
StatListFrame.Size = UDim2.new(1, -40, 0, 250)
StatListFrame.Position = UDim2.new(0, 20, 0, 170)
StatListFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
StatListFrame.ScrollBarThickness = 8
StatListFrame.BackgroundColor3 = Color3.fromRGB(245, 245, 245)
StatListFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
StatListFrame.AutomaticSize = Enum.AutomaticSize.None
StatListFrame.BorderSizePixel = 0

-- Health
local healthLabel = Instance.new("TextLabel", StatListFrame)
healthLabel.Position = UDim2.new(0, 20, 0, 0)
healthLabel.Size = UDim2.new(1, -40, 0, 25)
healthLabel.Text = "Health: N/A"
healthLabel.TextScaled = true
healthLabel.Font = Enum.Font.SourceSans
healthLabel.TextColor3 = Color3.fromRGB(0, 0, 0)

local levelLabel = Instance.new("TextLabel", StatListFrame)
levelLabel.Position = UDim2.new(0, 20, 0, 30)
levelLabel.Size = UDim2.new(1, -40, 0, 25)
levelLabel.Text = "Level: N/A"
levelLabel.TextScaled = true
levelLabel.Font = Enum.Font.SourceSans
levelLabel.TextColor3 = Color3.fromRGB(0, 0, 0)

local beliLabel = Instance.new("TextLabel", StatListFrame)
beliLabel.Position = UDim2.new(0, 20, 0, 60)
beliLabel.Size = UDim2.new(1, -40, 0, 25)
beliLabel.Text = "Beli: N/A"
beliLabel.TextScaled = true
beliLabel.Font = Enum.Font.SourceSans
beliLabel.TextColor3 = Color3.fromRGB(0, 0, 0)

local fragmentsLabel = Instance.new("TextLabel", StatListFrame)
fragmentsLabel.Position = UDim2.new(0, 20, 0, 90)
fragmentsLabel.Size = UDim2.new(1, -40, 0, 25)
fragmentsLabel.Text = "Fragments: N/A"
fragmentsLabel.TextScaled = true
fragmentsLabel.Font = Enum.Font.SourceSans
fragmentsLabel.TextColor3 = Color3.fromRGB(0, 0, 0)

local raceLabel = Instance.new("TextLabel", StatListFrame)
raceLabel.Position = UDim2.new(0, 20, 0, 120)
raceLabel.Size = UDim2.new(1, -40, 0, 25)
raceLabel.Text = "Race: N/A"
raceLabel.TextScaled = true
raceLabel.Font = Enum.Font.SourceSans
raceLabel.TextColor3 = Color3.fromRGB(0, 0, 0)

local viewLabel = Instance.new("TextButton", detailFrame)
viewLabel.Position = UDim2.new(0, 20, 0, 500)
viewLabel.Size = UDim2.new(1, -500, 0, 25)
viewLabel.Text = "View"
viewLabel.TextScaled = true
viewLabel.Font = Enum.Font.SourceSans
viewLabel.TextColor3 = Color3.fromRGB(0, 0, 0)

local unviewLabel = Instance.new("TextButton", detailFrame)
unviewLabel.Position = UDim2.new(0, 20, 0, 540)
unviewLabel.Size = UDim2.new(1, -500, 0, 25)
unviewLabel.Text = "Unview"
unviewLabel.TextScaled = true
unviewLabel.Font = Enum.Font.SourceSans
unviewLabel.TextColor3 = Color3.fromRGB(0, 0, 0)

local teleportLabel = Instance.new("TextButton", detailFrame)
teleportLabel.Position = UDim2.new(0, 150, 0, 500)
teleportLabel.Size = UDim2.new(1, -500, 0, 25)
teleportLabel.Text = "Teleport"
teleportLabel.TextScaled = true
teleportLabel.Font = Enum.Font.SourceSans
teleportLabel.TextColor3 = Color3.fromRGB(0, 0, 0)

local selectedPlayer = nil
local originalSubject = camera.CameraSubject
local currentHealthConnection = nil
local currentLevelConnection = nil
local currentBeliConnection = nil
local currentFragmentsConnection = nil
local currentRaceConnection = nil

-- Health updater
local function updateHealth(selectedPlayer)
	if currentHealthConnection then currentHealthConnection:Disconnect() end

	if selectedPlayer.Character and selectedPlayer.Character:FindFirstChild("Humanoid") then
		local humanoid = selectedPlayer.Character.Humanoid
		healthLabel.Text = "Health: " .. math.floor(humanoid.Health)

		currentHealthConnection = humanoid:GetPropertyChangedSignal("Health"):Connect(function()
			healthLabel.Text = "Health: " .. math.floor(humanoid.Health)
		end)
	else
		healthLabel.Text = "Health: N/A"
	end
end

-- Level updater
local function updateLevel(selectedPlayer)
	if currentLevelConnection then currentLevelConnection:Disconnect() end

	local success, levelValue = pcall(function()
		return selectedPlayer:WaitForChild("Data"):WaitForChild("Level")
	end)

	if success and levelValue then
		levelLabel.Text = "Level: " .. levelValue.Value
		currentLevelConnection = levelValue:GetPropertyChangedSignal("Value"):Connect(function()
			levelLabel.Text = "Level: " .. levelValue.Value
		end)
	else
		levelLabel.Text = "Level: N/A"
	end
end

local function updateBeli(selectedPlayer)
	if currentBeliConnection then currentBeliConnection:Disconnect() end

	local success, beliValue = pcall(function()
		return selectedPlayer:WaitForChild("Data"):WaitForChild("Beli")
	end)

	if success and beliValue then
		beliLabel.Text = "Beli: " .. beliValue.Value
		currentBeliConnection = beliValue:GetPropertyChangedSignal("Value"):Connect(function()
			beliLabel.Text = "Beli: " .. beliValue.Value
		end)
	else
		beliLabel.Text = "Beli: N/A"
	end
end

local function updateFragments(selectedPlayer)
	if currentFragmentsConnection then currentFragmentsConnection:Disconnect() end

	local success, fragmentsValue = pcall(function()
		return selectedPlayer:WaitForChild("Data"):WaitForChild("Fragments")
	end)

	if success and fragmentsValue then
		fragmentsLabel.Text = "Fragments: " ..fragmentsValue.Value
		currentFragmentsConnection = fragmentsValue:GetPropertyChangedSignal("Value"):Connect(function()
			fragmentsLabel.Text = "Fragments: " .. fragmentsValue.Value
		end)
	else
		fragmentsLabel.Text = "Fragments: N/A"
	end
end

local function updateRace(selectedPlayer)
	if currentRaceConnection then currentRaceConnection:Disconnect() end

	local success, raceValue = pcall(function()
		return selectedPlayer:WaitForChild("Data"):WaitForChild("Race")
	end)

	if success and raceValue then
		raceLabel.Text = "Race: " ..raceValue.Value
		currentRaceConnection = raceValue:GetPropertyChangedSignal("Value"):Connect(function()
			raceLabel.Text = "Race: " .. raceValue.Value
		end)
	else
		raceLabel.Text = "Race: N/A"
	end
end

-- Main updater
local function updateDetails(selectedPlayer)
	displayNameLabel.Text = selectedPlayer.DisplayName
	usernameLabel.Text = selectedPlayer.Name
	updateHealth(selectedPlayer)
	updateLevel(selectedPlayer)
	updateBeli(selectedPlayer)
	updateFragments(selectedPlayer)
	updateRace(selectedPlayer)
end

-- Refresh player list
local function refreshPlayerList()
	for _, child in ipairs(playerListFrame:GetChildren()) do
		if child:IsA("TextButton") then
			child:Destroy()
		end
	end

	for _, plr in ipairs(Players:GetPlayers()) do
		local button = Instance.new("TextButton", playerListFrame)
		button.Size = UDim2.new(1, -8, 0, 30)
		button.Text = plr.DisplayName
		button.BackgroundColor3 = Color3.fromRGB(160, 160, 160)
		button.TextScaled = true
		button.Font = Enum.Font.SourceSans
		button.TextColor3 = Color3.fromRGB(20, 20, 20)

		button.MouseButton1Click:Connect(function()
			selectedPlayer = plr
			updateDetails(plr)
		end)
	end
end

viewLabel.MouseButton1Click:Connect(function()
	if selectedPlayer and selectedPlayer.Character and selectedPlayer.Character:FindFirstChild("Humanoid") then
		camera.CameraSubject = selectedPlayer.Character.Humanoid
	end
end)

unviewLabel.MouseButton1Click:Connect(function()
	if player.Character and player.Character:FindFirstChild("Humanoid") then
		camera.CameraSubject = player.Character.Humanoid
	end
end)

teleportButton.MouseButton1Click:Connect(function()
    if selectedPlayer and selectedPlayer.Character and selectedPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local targetPos = selectedPlayer.Character.HumanoidRootPart.CFrame
        local myHRP = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
        if myHRP then
            myHRP.CFrame = targetPos + Vector3.new(0, 5, 0) -- offset so you don't clip inside them
        end
    end
end)

-- Auto-refresh the player list every 5 seconds
task.spawn(function()
	while true do
		refreshPlayerList()
		task.wait(1)
	end
end)

-- Initial refresh
refreshPlayerList()

-- Create ImageButton
local imageButton = Instance.new("ImageButton")
imageButton.Parent = screenGui
imageButton.Size = UDim2.new(0, 50, 0, 50)  -- Set size of the button
imageButton.Position = UDim2.new(0, 10, 0, 70)  -- Move the button down 50 pixels
imageButton.Image = "rbxassetid://128243454668365"  -- Set image using the asset ID

-- Set the button's background transparency to 100% (invisible)
imageButton.BackgroundTransparency = 1

-- Create UICorner for rounding the button's corners
local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(1, 0)  -- Full circle if the button is square
uiCorner.Parent = imageButton

-- When the button is clicked
imageButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = not mainFrame.Visible
end)
