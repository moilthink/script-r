local Library = loadstring(game:HttpGetAsync("https://github.com/ActualMasterOogway/Fluent-Renewed/releases/latest/download/Fluent.luau"))()

local Window = Library:CreateWindow{
    Title = `Setting`,
    SubTitle = "0.1.0",
    TabWidth = 160,
    Size = UDim2.fromOffset(830, 525),
    Resize = true, -- Resize this ^ Size according to a 1920x1080 screen, good for mobile users but may look weird on some devices
    MinSize = Vector2.new(470, 380),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.RightControl -- Used when theres no MinimizeKeybind
}

local Tabs = {
    Main = Window:CreateTab{
        Title = "Tab News",
        Icon = "nil"
    }
}

local Paragraph = Tabs.Main:CreateParagraph("Paragraph", {
    Title = "Change logs!",
    Content = [[
Update!
[+] new key system
]]
})

local Tabs = {
    Main = Window:CreateTab{
        Title = "Tab Load",
        Icon = "nil"
    }
}

Tabs.Main:CreateButton{
    Title = "Infinite Yield",
    Description = "",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/edgeiy/infiniteyield/master/source"))()
    end
}

Tabs.Main:CreateButton{
    Title = "Player Stat",
    Description = "",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/moilthink/script-r/refs/heads/main/stat"))()
    end
}

local Tabs = {
    Main = Window:CreateTab{
        Title = "Tab Server",
        Icon = "nil"
    }
}

-- Variables to store input values
local gameid = ""
local jobid = ""

Tabs.Main:CreateButton{
    Title = "Copy gameid",
    Description = "",
    Callback = function()
        local clipboardFunc = setclipboard or toclipboard
        if clipboardFunc then
            clipboardFunc(tostring(game.PlaceId))
            print("Copied Game ID:", game.PlaceId)
        else
            warn("Clipboard not supported on this executor.")
        end
    end
}

Tabs.Main:CreateButton{
    Title = "Copy jobid",
    Description = "",
    Callback = function()
        local clipboardFunc = setclipboard or toclipboard
        if clipboardFunc then
            clipboardFunc(tostring(game.JobId))
            print("Copied Job ID:", game.JobId)
        else
            warn("Clipboard not supported on this executor.")
        end
    end
}

local Input = Tabs.Main:CreateInput("Input", {
    Title = "GameId",
    Default = "",
    Placeholder = "",
    Numeric = false, -- Only allows numbers
    Finished = false,
    Callback = function(Value)
        gameid = Value
        print("Game ID set to:", gameid)
    end
})

local Input = Tabs.Main:CreateInput("Input", {
    Title = "JobId",
    Default = "",
    Placeholder = "",
    Numeric = false, -- Only allows numbers
    Finished = false,
    Callback = function(Value)
        jobid = Value
        print("Job ID set to:", jobid)
    end
})

Tabs.Main:CreateButton{
    Title = "Join Server",
    Description = "",
    Callback = function()
        local TeleportService = game:GetService("TeleportService")
        local placeId = tonumber(gameid)
        local instanceId = tostring(jobid)

        if placeId and instanceId ~= "" then
            TeleportService:TeleportToPlaceInstance(placeId, instanceId, game.Players.LocalPlayer)
        else
            warn("Invalid Game ID or Job ID.")
        end
    end
}

Tabs.Main:CreateButton{
    Title = "loop join server",
    Description = "",
    Callback = function()
        local TeleportService = game:GetService("TeleportService")
        local placeId = tonumber(gameid)
        local instanceId = tostring(jobid)

        while true do
            if placeId and instanceId ~= "" then
                TeleportService:TeleportToPlaceInstance(placeId, instanceId, game.Players.LocalPlayer)
            else
                warn("Invalid Game ID or Job ID.")
            end
            wait(0.5) -- retry delay
        end
    end
}

Tabs.Main:CreateButton{
    Title = "Server Hop",
    Description = "",
    Callback = function()
        local HttpService = game:GetService("HttpService")
        local TeleportService = game:GetService("TeleportService")
        local LocalPlayer = game.Players.LocalPlayer

        local PlaceId = game.PlaceId
        local currentJobId = game.JobId

        local function serverHop()
            local success, response = pcall(function()
                return HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"))
            end)

            if success and response and response.data then
                for _, server in pairs(response.data) do
                    if server.playing < server.maxPlayers and server.id ~= currentJobId then
                        TeleportService:TeleportToPlaceInstance(PlaceId, server.id, LocalPlayer)
                        return
                    end
                end
                warn("No different server found.")
            else
                warn("Failed to get server list.")
            end
        end

        serverHop()
    end
}

Tabs.Main:CreateButton{
    Title = "Small Server",
    Description = "Might not work",
    Callback = function()
        local HttpService = game:GetService("HttpService")
        local TeleportService = game:GetService("TeleportService")
        local LocalPlayer = game.Players.LocalPlayer

        local PlaceId = game.PlaceId
        local currentJobId = game.JobId

        local function getSmallestServer()
            local smallestServerId = nil
            local smallestPlayerCount = math.huge

            local success, response = pcall(function()
                return HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..PlaceId.."/servers/Public?sortOrder=Asc&limit=100"))
            end)

            if success and response and response.data then
                for _, server in pairs(response.data) do
                    if server.id ~= currentJobId and server.playing < server.maxPlayers then
                        if server.playing < smallestPlayerCount and server.playing > 0 then
                            smallestPlayerCount = server.playing
                            smallestServerId = server.id
                        end
                    end
                end
            else
                warn("Failed to fetch server data.")
            end

            return smallestServerId
        end

        local smallestServer = getSmallestServer()
        if smallestServer then
            TeleportService:TeleportToPlaceInstance(PlaceId, smallestServer, LocalPlayer)
        else
            warn("No smaller server found.")
        end
    end
}

Tabs.Main:CreateButton{
    Title = "Rejoin Server",
    Description = "Might not work",
    Callback = function()
        local TeleportService = game:GetService("TeleportService")
        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer

        local function rejoinServer()
            local currentJobId = game.JobId
            TeleportService:TeleportToPlaceInstance(game.PlaceId, currentJobId, LocalPlayer)
        end

        rejoinServer()
    end
}

local Tabs = {
    Main = Window:CreateTab{
        Title = "Local Player",
        Icon = "nil"
    }
}

Tabs.Main:CreateButton{
    Title = "Boost fps",
    Description = "",
    Callback = function()
        local Terrain = workspace:FindFirstChildOfClass('Terrain')
        Terrain.WaterWaveSize = 0
        Terrain.WaterWaveSpeed = 0
        Terrain.WaterReflectance = 0
        Terrain.WaterTransparency = 0
        Lighting.GlobalShadows = false
        Lighting.FogEnd = 9e9
        settings().Rendering.QualityLevel = 1

        for i, v in pairs(game:GetDescendants()) do
            if v:IsA("Part") or v:IsA("UnionOperation") or v:IsA("MeshPart") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
                v.Material = "Plastic"
                v.Reflectance = 0
            elseif v:IsA("Decal") then
                v.Transparency = 1
            elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                v.Lifetime = NumberRange.new(0)
            elseif v:IsA("Explosion") then
                v.BlastPressure = 1
                v.BlastRadius = 1
            end
        end

        for i, v in pairs(Lighting:GetDescendants()) do
            if v:IsA("BlurEffect") or v:IsA("SunRaysEffect") or v:IsA("ColorCorrectionEffect") or v:IsA("BloomEffect") or v:IsA("DepthOfFieldEffect") then
                v.Enabled = false
            end
        end

        workspace.DescendantAdded:Connect(function(child)
            task.spawn(function()
                if child:IsA('ForceField') then
                    RunService.Heartbeat:Wait()
                    child:Destroy()
                elseif child:IsA('Sparkles') then
                    RunService.Heartbeat:Wait()
                    child:Destroy()
                elseif child:IsA('Smoke') or child:IsA('Fire') then
                    RunService.Heartbeat:Wait()
                    child:Destroy()
                end
            end)
        end)
    end
}

Tabs.Main:CreateButton{
    Title = "Realistic Graphic",
    Description = "",
    Callback = function()
        local Lighting = game:GetService("Lighting")

        -- Set Lighting properties
        Lighting.Ambient = Color3.fromRGB(50, 45, 50)
        Lighting.Brightness = 8
        Lighting.ColorShift_Bottom = Color3.fromRGB(255, 255, 255)
        Lighting.ColorShift_Top = Color3.fromRGB(255, 255, 255)
        Lighting.EnvironmentDiffuseScale = 1
        Lighting.EnvironmentSpecularScale = 1
        Lighting.GlobalShadows = true
        Lighting.OutdoorAmbient = Color3.fromRGB(125, 125, 125)
        Lighting.ShadowSoftness = 0.25
        Lighting.Technology = Enum.Technology.Future
        Lighting.ClockTime = 6.4
        Lighting.GeographicLatitude = 3.141
        Lighting.TimeOfDay = "06:24:00"
        Lighting.ExposureCompensation = -0.5
        Lighting.FogColor = Color3.fromRGB(192, 192, 192)
        Lighting.FogStart = 0
        Lighting.FogEnd = 100000

        -- Delete existing Sky objects
        for _, v in pairs(Lighting:GetChildren()) do
            if v:IsA("Sky") then
                v:Destroy()
            end
        end

        -- Modify existing Atmosphere
        local atmosphere = Lighting:FindFirstChildOfClass("Atmosphere")
        if atmosphere then
            atmosphere.Density = 0.3
            atmosphere.Offset = 0
            atmosphere.Color = Color3.fromRGB(255, 255, 255)
            atmosphere.Decay = Color3.fromRGB(16, 22, 25)
            atmosphere.Glare = 0.1
            atmosphere.Haze = 2
        end

        -- Modify existing BloomEffect
        local bloom = Lighting:FindFirstChildOfClass("BloomEffect")
        if bloom then
            bloom.Intensity = 2.5
            bloom.Size = 25
            bloom.Threshold = 2
        end

        -- Modify existing ColorCorrectionEffect
        local colorCorrection = Lighting:FindFirstChildOfClass("ColorCorrectionEffect")
        if colorCorrection then
            colorCorrection.Brightness = -0.025
            colorCorrection.Contrast = 0
            colorCorrection.Saturation = -0.1
            colorCorrection.TintColor = Color3.fromRGB(255, 255, 255)
        end

        -- Modify existing DepthOfFieldEffect
        local depthOfField = Lighting:FindFirstChildOfClass("DepthOfFieldEffect")
        if depthOfField then
            depthOfField.FarIntensity = 0.219
            depthOfField.FocusDistance = 51.6
            depthOfField.InFocusRadius = 50
            depthOfField.NearIntensity = 1
        end

        -- Modify existing SunRaysEffect
        local sunRays = Lighting:FindFirstChildOfClass("SunRaysEffect")
        if sunRays then
            sunRays.Intensity = 0.1
            sunRays.Spread = 0.1
        end
    end
}

Tabs.Main:CreateButton{
    Title = "Copy HWID",
    Description = "",
    Callback = function()
        local clipboardFunc = setclipboard or toclipboard
        if clipboardFunc then
            local hwid = gethwid()
            clipboardFunc(tostring(hwid))
            print("Your HWID is: " .. hwid)
        else
            warn("Clipboard not supported on this executor.")
        end
    end
}

Tabs.Main:CreateButton{
    Title = "Copy Client ID",
    Description = "",
    Callback = function()
        local clipboardFunc = setclipboard or toclipboard
        local clientId = game:GetService("RbxAnalyticsService"):GetClientId()

        if clipboardFunc then
            clipboardFunc(tostring(clientId))
            print("Client ID: " .. clientId)
        else
            warn("Clipboard not supported on this executor.")
        end
    end
}

Tabs.Main:CreateButton{
    Title = "print position",
    Description = "",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

        -- Get player position
        local playerPosition = humanoidRootPart.Position
        print("You are at position:", playerPosition)

        -- Copy position to clipboard
        local clipboardFunc = setclipboard or toclipboard
        if clipboardFunc then
            clipboardFunc(tostring(playerPosition))
            print("Copied position to clipboard:", playerPosition)
        else
            warn("Clipboard not supported on this executor.")
        end
    end
}

Tabs.Main:CreateButton{
    Title = "tp",
    Description = "",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

        -- Target position
        local targetPosition = Vector3.new(-78.90654754638672, 148.4068603515625, -80.8273696899414)

        -- Teleport the character
        humanoidRootPart.CFrame = CFrame.new(targetPosition)

        print("Teleported to:", targetPosition)
    end
}
